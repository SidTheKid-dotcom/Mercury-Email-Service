generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id              Int      @id @default(autoincrement())
  content         String
  createdAt       DateTime @default(now())
  queryId         Int
  answerCreatorId Int
  User            User     @relation(fields: [answerCreatorId], references: [id])
  Query           Query    @relation(fields: [queryId], references: [id])
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
}

model Query {
  id                         Int         @id @default(autoincrement())
  content                    String
  createdAt                  DateTime    @default(now())
  creatorId                  Int
  downvotesCount             Int         @default(0)
  upvotesCount               Int         @default(0)
  Answer                     Answer[]
  User_Query_creatorIdToUser User        @relation("Query_creatorIdToUser", fields: [creatorId], references: [id])
  QueryVote                  QueryVote[]
  Tag                        Tag[]       @relation("QueryTags")
  User_SpamReports           User[]      @relation("SpamReports")
}

model QueryVote {
  id      Int      @id @default(autoincrement())
  queryId Int
  userId  Int
  type    VoteType
  Query   Query    @relation(fields: [queryId], references: [id])
  User    User     @relation(fields: [userId], references: [id])
}

model Tag {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  Query Query[] @relation("QueryTags")
}

model User {
  id                          Int         @id @default(autoincrement())
  email                       String      @unique
  designation                 Designation
  departmentId                Int
  Answer                      Answer[]
  Query_Query_creatorIdToUser Query[]     @relation("Query_creatorIdToUser")
  QueryVote                   QueryVote[]
  Department                  Department  @relation(fields: [departmentId], references: [id])
  Query_SpamReports           Query[]     @relation("SpamReports")
}

enum Designation {
  employee
  manager
  HOD
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}
